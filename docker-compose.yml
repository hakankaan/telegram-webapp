name: telegram-webapp
services:
  bot-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: telegram_bot
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - bot_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d telegram_bot"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot-migrations:
    build:
      context: .
      dockerfile: ./apps/telegram-bot/Dockerfile
      target: builder
    depends_on:
      bot-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
    entrypoint: ["npx", "drizzle-kit", "migrate"]

  bot-app:
    build:
      context: .
      dockerfile: ./apps/telegram-bot/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      bot-db:
        condition: service_healthy
      bot-migrations:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_API_URL=${TELEGRAM_API_URL}
      - WEB_APP_URL=${WEB_APP_URL}

  
  web-app:
    build:
      context: .
      dockerfile: ./apps/web-app/Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    environment:
      - NODE_ENV=production


volumes:
  bot_db_data:
